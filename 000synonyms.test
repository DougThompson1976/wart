(test-wart "pairp works"
  :valueof (pairp '(1 2))
  :should satisfy true_value)

(test-wart "call works on simple functions"
  :valueof (call #'car '(1))
  :should be 1)

(test-wart "call works on simple functions"
  :valueof (call #'car '(1))
  :should be 1)

(test-wart "call coerces to function when necessary"
  :valueof (call 'car '(1))
  :should be 1)

(test-wart "call works on lambdas"
  :valueof (call [+ _ 1] 3)
  :should be 4)

(defmacro macfoo(a) `(+ 1 ,a))
(test-wart "call handles macros"
  :valueof (call 'macfoo 3)
  :should be 4)

(setf a 2)
(test-wart "call handles macros with global bindings"
  :valueof (call 'macfoo a)
  :should be 3)

(test-wart "call handles macros with bindings"
  :valueof (_let a 3 (call 'macfoo a))
  :should be 4)

(test-wart "call handles incf macro"
  :valueof (_let a 32 (call incf a))
  :should be 33)
