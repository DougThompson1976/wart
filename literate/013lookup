:(code)
unordered_map<cell*, cell*> Bindings;

cell* lookup(string s) {
  return lookup(new_sym(s));
}

cell* lookup(cell* sym) {
  if (!Bindings[sym]) {
    RAISE << "No binding for " << to_string(sym) << '\n';
    return nil;
  }
  return Bindings[sym];
}

void new_binding(string sym, cell* val) {
  new_binding(new_sym(sym), val);
}

void new_binding(cell* sym, cell* val) {
  trace("bind") << sym << ": " << val;
  Bindings[sym] = val;
}

:(before "End Test Teardown")
  teardown_bindings();
:(code)
void teardown_bindings() {
  Bindings.clear();
}

void test_lookup_returns_dynamic_binding() {
  cell* sym = new_sym("a");
  cell* val = new_num(34);
  new_binding(sym, val);
  CHECK_EQ(lookup(sym), val);
}
