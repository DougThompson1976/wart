(test "if handles 0 args"
 :valueof (if)
 :should be nil)

(test "if handles 1 arg"
 :valueof if.3
 :should be 3)

(test "if handles 2 args"
 :valueof (if 3 4)
 :should be 4)

(test "if handles then branch"
 :valueof (if 3 4 5)
 :should be 4)

(test "if handles else branch"
 :valueof (if nil 4 5)
 :should be 5)

(test "if handles 4 args"
 :valueof (if nil 4 5)
 :should be 5)

(test "if handles 5 args"
 :valueof (if nil 4 5 6)
 :should be 6)

(test "if handles :else"
 :valueof (if nil 4 :else 6)
 :should be 6)

(test "if handles lexical scope"
 :valueof (let x 34 (if x))
 :should be 34)

(test "if handles dynamic scope"
 :valueof (do (assign x 34)
              (if x 35))
 :should be 35)



(test "or handles 0 args"
 :valueof or.
 :should be nil)

(test "or handles nil arg"
 :valueof or.nil
 :should be nil)

(test "or handles non-nil arg"
 :valueof or.3
 :should ~be nil)

(test "or handles 2 args"
 :valueof (or nil 3)
 :should be 3)

(test "or handles multiple non-nil args"
 :valueof (or 3 4)
 :should be 3)

(test "or short-circuits on first non-nil arg"
 :valueof (ret x nil
            (or 3 (assign x 4)))
 :should be nil)

(test "lexical scope overrides dynamic scope inside macros"
 :valueof (do (assign x 35)
              (let x 3
                or.x))
 :should be 3)
