; hash.key => (call (coerce hash 'function) key) => (call [gethash _ hash] key)
(defcoerce 'hash-table 'function
  (fn(table)
    [gethash _ table]))

(defcoerce 'hash-table 'cons
  (fn(table)
    (ret ans '()
      (maphash #'(lambda(k v) (push (list k v) ans)) table))))

(defcoerce 'cons 'hash-table
  (fn(l)
    (ret ans (table)
      (map (fn((a b))
             (setf (gethash a ans) b))
           l))))

(mac obj args
  `(coerce (list ,@(map (fn ((k v))
                           `(list ',k ,v))
                         (pair args)))
           'hash-table))
