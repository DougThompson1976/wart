(test-wart "new redefined let"
  :valueof (let a 3 a)
  :should be 3)

(test-wart "let destructures"
  :valueof (let (a b) '(3 4) a)
  :should be 3)

(test-wart "new keyword - with"
  :valueof (with (a 3) a)
  :should be 3)

(test-wart "map works"
  :valueof (map '1+ '(2 3 4))
  :should be '(3 4 5))



; integration test: wrepl + mac + let
(wt-eval '(mac aand(a b) `(let it ,a (and it ,b))))
(prn (macex1 '(aand (- x 1) (> it 1))))
(prn (wt-transform `(let x 3 ,(macex1 '(aand (- x 1) (> it 1))))))
(test-wart "macro bodies should pass through the compiler"
  :valueof (let x 3 (aand (- x 1) (> it 1)))
  :should satisfy true_value)
