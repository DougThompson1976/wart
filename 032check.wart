let $if if
  mac! if args
    $if !cdr.args
      car.args
      `(,$if ,car.args
         ,cadr.args
         (if ,@cddr.args))

mac or args
  if args
    `(let $x ,car.args
       if $x
         $x
         or ,@cdr.args)

mac and args
  if !args
    1
    if car.args
      if !cdr.args
        car.args
        `(if ,car.args
           and ,@cdr.args)

alias nil? not
alias no not

let $iso iso
  def! iso(a b)
    or ($iso a b)
      and (cons? a)
          (cons? b)
          (iso car.a car.b)
          (iso cdr.a cdr.b)

def copy(x)
  if cons?.x
    (cons copy:car.x copy:cdr.x)
    x

(def only(f)
  (fn args
    (if f (f @args))))
