(test "macp recognizes macros"
  :valueof (macp 'incf)
  :should satisfy true_value)



(test "wart-type handles integer types"
  :valueof (wart-type 3)
  :should be 'integer)

(test "wart-type handles string types"
  :valueof (wart-type "abc")
  :should be 'string)

(test "wart-type recognizes macros"
  :valueof (wart-type 'incf)
  :should be 'macro)

(defcoerce ratio integer
  (lambda(x) 15))

(test "wart-coerce works"
  :valueof (wart-coerce 1/2 'integer)
  :should be 15)

(defcoerce foo bar
  [annotate bar (1+ (rep _))])

(test "wart-coerce works on user-defined types"
  :valueof (wart-coerce (annotate foo 34) 'bar)
  :should be '(tagged bar 35))



(test "isa works"
  :valueof (isa 4 'integer)
  :should be t)

(test "isa works with user-defined types - 1"
  :valueof (isa (annotate foo 34) 'foo)
  :should be t)

(test "isa works with user-defined types - 2"
  :valueof (isa (annotate foo 34) 'foo2)
  :should be nil)

(test "isa works with multiple type args"
  :valueof (isa (annotate foo 34) '(integer foo))
  :should be t)
