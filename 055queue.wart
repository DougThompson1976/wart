def (queue seq)
  (tag queue (list seq lastcons.seq len.seq))

def (enq x q)
  do1 x
    let (l last _) rep.q
      ++ rep.q.2
      if no.l
        rep.q.1 <- (rep.q.0 <- list.x)
        rep.q.1 <- (cdr.last <- list.x)

def (deq q)
  awhen rep.q.0
    ret ans car.it
      -- rep.q.2
      zap! cdr rep.q.0

defcoerce queue list
  (fn(_) rep._.0)

def (len q) :case (isa queue q)
  rep.q.2
