(defmacro defover-bar(&rest x) x)
(defover defover-foo defover-bar)

(test "defover works"
  :valueof (wt-transform '(defover-foo a))
  :should be '(defover-bar a))

(test "expand-ssyntax goes through wt-transform"
  :valueof (expand-ssyntax 'defover-foo.3)
  :should be '(call* defover-bar 3))
