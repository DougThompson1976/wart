(test-wart "list indexing works"
  :valueof (call '(1 2 3) 2)
  :should be 3)

(test-wart "writing to list index works"
  :valueof (ret l '(1 2 3)
             (= l.1 34))
  :should be '(1 34 3))

(test-wart "last has arc semantics rather than common lisp semantics"
  :valueof (last '(1 2 3))
  :should be 3)

(test-wart "mappend works"
  :valueof (mappend [list (* _ 10)] '(1 2 3))
  :should be '(10 20 30))

(test-wart "adjoin works"
  :valueof (adjoin 2 '(1 2 3))
  :should be '(1 2 3))

(test-wart "adjoin works - 2"
  :valueof (adjoin 2 '(1 3 5))
  :should be '(2 1 3 5))

(test-wart "alist works"
  :valueof (alist '((1 2) (3 4)))
  :should be '((1 . 2) (3 . 4)))

(test-wart "dot works"
  :valueof (dot '(1 2))
  :should be '(1 . 2))

(test-wart "intersperse works"
  :valueof (intersperse 3 '(1 2 4))
  :should be '(1 3 2 3 4))
