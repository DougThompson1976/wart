(test "arithmetic is varargs"
 :valueof (+ 1 2 3 (* 1 2 2))
 :should be 10)

(test "division works"
 :valueof (/ 4 2 2)
 :should be 1)

(test "increment works with lexical vars"
 :valueof (ret x 3 ++.x)
 :should be 4)

(test "divides works"
 :valueof (divides 3 2)
 :should be nil)

(test "divides works - 2"
 :valueof (divides 4 2)
 :should ~be nil)

(test "> works"
 :valueof (> 3 2 1)
 :should ~be nil)

(test "> works - 2"
 :valueof (> 3 1 2)
 :should be nil)

(test "< works"
 :valueof (< 3 1 2)
 :should be nil)

(test "< works - 2"
 :valueof (< 1 2 3)
 :should ~be nil)

(test "<= works"
 :valueof (<= 1 2 3)
 :should ~be nil)

(test "<= works"
 :valueof (<= 1 1 3)
 :should ~be nil)

(test "<= works"
 :valueof (<= 1 4 3)
 :should be nil)

(test ">= works"
 :valueof (>= 3 2 1)
 :should ~be nil)

(test ">= works"
 :valueof (>= 3 1 1)
 :should ~be nil)

(test ">= works"
 :valueof (>= 3 1 2)
 :should be nil)

(test "floats compare to within a tolerance"
 :valueof (>= 2 2.0000001)
 :should ~be nil)
