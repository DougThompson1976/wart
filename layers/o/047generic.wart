let $mac mac
  mac! (mac (name ... params) ... body)
    (if
      (car.body = :case)
        : `(let $super ,name
             (mac! (,name ... ,params)
               (if ,cadr.body
                 (do ,@cddr.body)
                 (cons $super all_unevald_args))))
      (car.body = :qcase)  # to dispatch on values rather than names
        : `(let $super ,name
             (mac! (,name ... ,params)
               (if (eval ,cadr.body (macro_caller_scope))
                 (do ,@cddr.body)
                 (cons $super all_unevald_args))))
      :else
        : `(,$mac (,name ,@params) ,@body))

mac (def (name ... params) ... body) :case (car.body = :case)
  `(let $old ,name
     (def! (,name ... ,params)
       (if ,cadr.body
         (do ,@cddr.body)
         ($old @all_unevald_args))))
