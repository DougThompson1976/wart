## Before
#? let $old push
#?   mac (push x s)
#?     if (isa stack s)
#?       `(push ,x (rep ,s))
#?       `(,$old ,x ,s)

def (foofoo ... '((name ... params) ... body))
  if (car.body = :case)
    `(let $super ,name
       (mac! (,name ... ($params | ,params))
         (if ,cadr.body
           (do ,@cddr.body)
           (cons $super $params))))
    `(mac (,name ,@params) ,@body)

## Desired
#? let $old push
#?   mac (push x s)
#?     `(if ,`(isa stack ,s)
#?        ,`(push ,x (rep ,s))
#?        (,$old ,x ,s))

## With the 'do
#? let $old push
#?   mac (push x s)
#?     `(if ,`(isa stack ,s)
#?        ,(do `(push ,x (rep ,s)))
#?        (,$old ,x ,s))

def (foofoo2 ... '((name ... params) ... body))
  if (car.body = :case)
    `(let $super ,name
       (mac! (,name ... ($params | ,params))
         `(if ,,(cons unquote cadr.body)
            (do ,,@(map (fn(_) (cons unquote _))
                        cddr.body))
            ,(cons $super $params))))
    `(mac (,name ,@params) ,@body)

#? let super60 push
#?   mac! (push | params61 (x s))
#?     `(if ,`(isa stack ,x)
#?        ,(do `(push ,x (rep ,s)))
#?        (cons super60 params61))
