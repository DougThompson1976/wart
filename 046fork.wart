(require :sb-posix)

; clone a process that stops after executing child
(def fork-fn(child)
  #-win32
  (let pid (sb-posix:fork)
    (if (zerop pid)
      (after
        (call child)
      :do
        (quit)))))

(mac fork body
  `(fork-fn (thunk ,@body)))

(synonym wait-for-children sb-posix:wait
         getpid sb-posix:getpid)

(def preforking-fn(n f)
  (repeat n
    (fork-fn f))
  (forever
    (wait-for-child)
    (prn "restart")
    (fork-fn f)))

(mac preforking(n . body)
  `(preforking-fn ,n (thunk ,@body)))

(def wait-for-child(? options 0)
  (sb-posix:waitpid 0 options))



(def spawn-fn(f)
  (perform (sb-thread:make-thread f)))

(mac spawn body
  `(spawn-fn (thunk ,@body)))
