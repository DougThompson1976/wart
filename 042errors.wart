(mac after body
  (let (body finally) (split-at :do body)
    `(unwind-protect
       (do ,@body)
       ,@finally)))

(defmacro skipping(error &body body)
  `(catch ',error
      (handler-bind ((,error  (lambda(x)
                                (throw ',error ',error))))
        ,@body)))



;; Internals

(defun split-at(test s)
  (if (consp s)
    (let tmp (split-at test cdr.s)
      (if (call testify.test car.s)
        (cons nil tmp)
        (cons (cons car.s car.tmp)
              cdr.tmp)))))
