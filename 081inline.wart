def (freeze tree)
  if (bound? tree nil)  # just dynamic bindings
       (eval tree nil)
     ~cons?.tree
       tree
     quoted?.tree
       tree
     :else
       (map freeze tree)

def (inline (tree | (f ... args)))
  awhen f :satisfies fn?
    (replace_all (as table symbolic_eval_args.tree) :in body.f)

def (replace_all bindings tree|in)
  (aif tree :satisfies ~cons?
         (or bindings.it it)
       tree :satisfies quoted?
         it
       :else
         (map (fn(_) (replace_all bindings _))
              tree))

mac (skipping_undefined_vars ... body)
  `(do
    (stop_warning_on_undefined_var)
    (before (warn_on_undefined_var)
      ,@body))
