(wt-eval '(def foodef(a b) a))
(wt-eval '(def foodef(a b) :case (oddp a)
            b))
(test "guarded def clauses using :case"
  :valueof (list (foodef 33 2) (foodef 4 2))
  :should be (list 2 4))

(wt-eval '(mac foomac2(x) :case (floatp x)
            `(+ 3.0 ,x)))
(test "guarded mac clauses using :case"
  :valueof (list (foomac2 3.67) (foomac2 3))
  :should be (list 6.67 4))

(wt-eval '(def foodef(a b) :type string
            b))
(test "guarded def clauses using :type"
  :valueof (list (foodef "abc" 2) (foodef 4 2))
  :should be (list 2 4))

(wt-eval '(def foodef args :type integer
            (+ (cadr args) 1)))
(test "guarded def clauses using :type on rest arg"
  :valueof (foodef 33 2)
  :should be 3)
