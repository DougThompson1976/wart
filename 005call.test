(test-wart "old coercions continue to work"
  :valueof (call (coerce 'car 'function) '(3))
  :should be 3)

(test-wart "call works on simple functions"
  :valueof (call 'car '(1))
  :should be 1)

(test-wart "call works on simple functions"
  :valueof (call 'car '(1))
  :should be 1)

(test-wart "call coerces to function when necessary"
  :valueof (call 'car '(1))
  :should be 1)

(test "inline-last works"
  :valueof (inline-last '(1 2 (3 4 5)))
  :should be '(1 2 3 4 5))

(test "inline-last works on nil"
  :valueof (inline-last nil)
  :should be nil)

(test "inline-last works on non-lists"
  :valueof (inline-last 3)
  :should be 3)

(test "inline-last works on singleton"
  :valueof (inline-last '(1))
  :should be '(1))

(test "inline-last works on flat list"
  :valueof (inline-last '(1 2 3))
  :should be '(1 2 3))

(test "inline-last works on nested list"
  :valueof (inline-last '(1 2 (3) 4 (5 6 (7))))
  :should be '(1 2 (3) 4 5 6 (7)))



(test "wart-coerce works on macros"
  :valueof (wart-coerce 'incf 'function)
  :should be 'incf)



(test "function-value works on primitives"
  :valueof (function-value 'oddp)
  :should satisfy true_value)

(test "function-value works on lambdas"
  :valueof (function-value (lambda()))
  :should satisfy true_value)

(test "function-value works on non-functions"
  :valueof (function-value 1)
  :should be nil)
