(test "ssyntax-char works on final position"
  :valueof (ssyntax-char "a@")
  :should satisfy true_value)

(test "ssyntax-char returns index of rightmost ssyntax"
  :valueof (ssyntax-char "a@b@cd")
  :should be 3)

(test "ssyntax-char takes starting index"
  :valueof (ssyntax-char "a@b@cd" 2)
  :should be 1)

(test "ssyntaxp works"
  :valueof (ssyntaxp 'a@b)
  :should satisfy true_value)

(test "ssyntaxp ignores ordinary lisp tokens"
  :valueof (ssyntaxp 'a+b-c)
  :should be nil)

(def-ssyntax #\@ 'foo*)
(test "expand-ssyntax works"
  :valueof (expand-ssyntax 'a@b)
  :should be '(foo* a b))

(def-ssyntax #\@ 'foo*)
(test "expand-ssyntax works with ints in rhs"
  :valueof (expand-ssyntax 'a@3)
  :should be '(foo* a 3))

(def-ssyntax #\@ 'foo*)
(test "expand-ssyntax works with ints in lhs"
  :valueof (expand-ssyntax '3@3)
  :should be '(foo* 3 3))
