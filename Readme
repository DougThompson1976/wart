Wart, the thin arc-like membrane atop Common Lisp -- http://github.com/akkartik/wart
Feedback: wart@akkartik.com

You'll need SBCL.
  $ wart
  wart> (quit)
  $

To run tests:
  $ wart test
  $ # success

Rationale: http://arclanguage.org/item?id=12814
In short, wart tries to be as arc-like as possible while making Common Lisp do
as much of the work as possible.

Reasons to try out wart:
* You know arc and want to play with Common Lisp
* You know Common Lisp and want to play with something arc-like
* You want to read a simple arc-like implementation
* You want an arc-like lisp that can use multiple cores of your processor

Reasons to stick with arc:
* You want an arc-compatible language. Wart differs from arc in lots of subtle
  ways that you'll have to read the unit tests (*.test, *.wtst) to understand.
* You'll often have to say (call f arg) rather than (f arg)
* You need call/cc and first-class continuations
