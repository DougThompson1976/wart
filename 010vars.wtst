(test-wart "new redefined let"
  :valueof (let a 3 a)
  :should be 3)

(test-wart "let destructures"
  :valueof (let (a b) '(3 4) a)
  :should be 3)

(test-wart "new keyword - with"
  :valueof (with (a 3) a)
  :should be 3)

(test-wart "map works"
  :valueof (map #'1+ '(2 3 4))
  :should be '(3 4 5))

(test "w/uniq works with single var"
  :valueof (macex1 '(w/uniq a 3))
  :should be '(wart-let a (uniq) 3))

(test "w/uniq works with multiple vars"
  :valueof (macex1 '(w/uniq (a b) 3))
  :should be '(with (a (uniq) b (uniq)) 3))



; integration test: wrepl + mac + let
(wt-eval '(mac aand(a b) `(let it ,a (and it ,b))))
(test-wart "macro bodies should pass through the compiler"
  :valueof (let x 3 (aand (- x 1) (> it 1)))
  :should satisfy true_value)
