def inline(calls env)
  collect:each call calls
    each form (inline-form call env)
      yield form

def inline-form((ff . args) env)
  iflet f env.ff
    ; XXX: multiple-eval
    (replace f!body :bindings (as table (zip f!sig args)))
    (list (cons ff args))

def replace(expr bindings)
  if !cons?.expr
    (or bindings.expr expr)
    (cons (replace car.expr bindings)
          (replace cdr.expr bindings))
