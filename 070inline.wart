def inline(calls env)
  collect:each call calls
    each form (inline-form call env)
      yield form

def inline-form((ff . args) env)
  iflet f ((andf ~compiled-fn? rep) env.ff)
    (apply-bindings f!body (as table (gen-bindings f!sig args)))
    (list (cons ff args))



;; internals

; XXX: multiple-eval
def gen-bindings(params args acc)
  (if
    !params ; base case
      acc
    ~cons?.params ; rest param
      (cons (list params (cons 'list args))
            acc)
    (~cons? car.params)
      (cons (list car.params car.args)
            (gen-bindings cdr.params cdr.args acc))
    :else ; destructured param
      (gen-bindings car.params car.args
               (gen-bindings cdr.params cdr.args acc)))

def apply-bindings(expr bindings)
  if !cons?.expr
    (or bindings.expr expr)
    (cons (apply-bindings car.expr bindings)
          (apply-bindings cdr.expr bindings))
