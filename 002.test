(test "match - atom positive"
  :valueof (match 3 3)
  :should be t)

(test "match - atom negative"
  :valueof (match 3 4)
  :should be nil)

(test "match - list positive"
  :valueof (match '(1 (2 3)) '(1 (2 3)))
  :should be t)

(test "match - list negative"
  :valueof (match '(2 (2 3)) '(1 (2 3)))
  :should be nil)

(test "match treats _ as atom wildcard"
  :valueof (match 3 '_)
  :should be t)

(test "match - _ positive"
  :valueof (match '(1 (2 3 4)) '(1 (_ 3 4)))
  :should be t)

(test "match - _ negative"
  :valueof (match '(2 (2 3 4)) '(1 (_ 3 4)))
  :should be nil)

(test "match - _ doesn't match lists"
  :valueof (match '(3) '_)
  :should be t)

(test "match - _ doesn't match lists - 2"
  :valueof (match '(1 2 3) '(1 _))
  :should be nil)

(test "match - _.. positive"
  :valueof (match '(1 (2 3 4)) '(1 (2 _..)))
  :should be t)

(test "match - _.. negative"
  :valueof (match '(2 (2 3 4)) '(1 (2 _..)))
  :should be nil)

(test "match - _.. doesn't match non-lists"
  :valueof (match 3 '(_..))
  :should be nil)
