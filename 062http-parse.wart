;; http://www.arclanguage.org/item?id=11337

(def parse-http-request(ip ? from stdin*)
  (withs ((method url protocol)   (tokens read-line.from)
          (path query)  (tokens url #\?)
          headers   (parse-http-headers from)
          body  (read-body headers from))
    (obj protocol   protocol
         method   (call sym^downcase method)
         path   path
         query  query
         headers  headers
         ip   (or (alref "x-forwarded-for" headers)
                  (alref "x-real-ip" headers)
                  ip)
         cookies  (parse-http-cookies headers)
         body   body
         args   (join (parse-http-args query)
                      (parse-http-body headers body)))))



;; Internals

(def parse-http-headers(? from stdin*)
  (let line read-line.from
    (awhen (pos #\: line)
      (cons (cons (map 'downcase (cut line 0 it))
                  (trim (cut line 1+.it)))
            (parse-http-headers from)))))

(def parse-http-cookies(headers)
  (aif (alref "cookie" headers)
    (map [dot (tokens trim._ #\=)]
         (tokens it #\;))))

(def parse-http-args(args)
  (when args
    (map [dot (map 'urldecode (tokens _ #\=))]
         (tokens args #\&))))

(def parse-http-body(headers body)
  (when (search "x-www-form-urlencoded"
                (alref "content-type" headers))
    (parse-http-args body)))

(def read-body(headers ? from stdin*)
  (whenlet num (aand (alref "content-length" headers)
                     (errsafe int.it))
    (str (collect
           (repeat num
             (yield read-char.from))))))
