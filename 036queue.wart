(def queue()
  (annotate 'queue (list nil nil 0)))

(def len(x) :case (isa x 'queue)
  rep.q.2)

(defcoerce queue cons
  [car (rep _)])

(def empty(x) :case (isa x 'queue)
  (empty (as cons x)))

(def enq(q elem)
  (let r rep.q
    (++ rep.q.2)
    (if (empty q)
      (= r.1 (= r.0 list.elem))
      (= (cdr r.1) list.elem
         r.1  (cdr r.1)))))

(def deq(q)
  (let r rep.q
    (unless (empty q)
      (-- r.2))
    (pop r.0)))
