(= templates* (table))

(mac deftem(tem . fields)
  (withs (name car.tem
          includes cdr.tem)
    `(do1 nil
       (= (call templates* ',name)
          (join
              (mappend templates* ',rev.includes)
              (list
                ,@(map (fn((k v))
                         `(list ',k (thunk ,v)))
                       pair.fields)))))))

(def inst(tem . args)
  (ret x (table)
    (each (k v) (if consp.tem
                  tem
                  templates*.tem)
      (when v
        (= x.k (call v))))
    (each (k v) pair.args
      (= x.k v))))
