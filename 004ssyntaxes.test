(defmacro macfoo(a) `(+ 1 ,a))
(test-wart "call* handles macros"
  :valueof (call* macfoo 3)
  :should be 4)

(setf a 2)
(test-wart "call* handles macros with global bindings"
  :valueof (call* macfoo a)
  :should be 3)

(test-wart "call* handles macros with bindings"
  :valueof (_let a 3 (call* macfoo a))
  :should be 4)

(test-wart "call* handles incf macro"
  :valueof (_let a 32 (call* incf a))
  :should be 33)

(test-wart "compose works"
  :valueof (call 1+^1+ 3)
  :should be 5)

(test-wart "complement works"
  :valueof (call ~oddp 3)
  :should be nil)
