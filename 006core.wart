(def id(? x nil) x)

(def isa(elem type)
  (is (type elem) type))

(def isnt(x y) (no (is x y)))

(mac w/uniq(names . body)
  (if (consp names)
      `(with ,(apply #'join nil (map (fn(n) (list n '(uniq)))
                                     names))
         ,@body)
      `(let ,names (uniq) ,@body)))
