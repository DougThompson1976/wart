(mac proc(name args . body)
  `(def ,name ,args ,@body nil))

(mac ret(var val . body)
  `(let ,var ,val ,@body ,var))

(mac until(test . body)
  `(while (not ,test)
      ,@body))

(mac forever body
  `(while t ,@body))

(mac whilet (var test . body)
  `(call (rfn ,$f (,$p)
           (let ,var ,$p
             (when ,var ,@body (,$f ,test))))
         ,test))

(mac awhile(expr . body)
  `(whilet it ,expr
    ,@body))
