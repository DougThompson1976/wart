mac! f.x
  `(,f ,x)

mac! f.-x
  `(,f (- ,x))

def (compose f g)
  fn '$args
    eval `(,f (,g ,@$args)) caller_scope

let ($+ $if ($=)) `(,+ ,if ,=)
  def! f+g
    $if ((type f) $= 'function)
      (compose f g)
      $if ((type g) $= 'function)
        (compose f g)
        ($+ f g)

def (complement f)
  (compose not f)

alias (~) complement
